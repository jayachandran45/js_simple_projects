{"id":"gKk3","dependencies":[{"name":"C:\\Users\\jayac\\Desktop\\kyle_js\\projects\\npm_bundler\\package.json","includedInParent":true,"mtime":1688972825552},{"name":"C:\\Users\\jayac\\Desktop\\kyle_js\\projects\\npm_bundler\\node_modules\\uuid\\package.json","includedInParent":true,"mtime":1688970487224}],"generated":{"js":"\"use strict\";let e;Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.default=o;const t=new Uint8Array(16);function o(){if(!e&&!(e=\"undefined\"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)))throw new Error(\"crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported\");return e(t)}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":4,"column":0},"generated":{"line":1,"column":13}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"getRandomValues","original":{"line":4,"column":4},"generated":{"line":1,"column":17}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":26}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":41}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":62}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":70}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":74}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":82}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":18,"column":0},"generated":{"line":1,"column":90}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":5,"column":0},"generated":{"line":1,"column":92}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"rnds8","original":{"line":5,"column":6},"generated":{"line":1,"column":98}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":5,"column":14},"generated":{"line":1,"column":100}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"Uint8Array","original":{"line":5,"column":18},"generated":{"line":1,"column":104}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":5,"column":29},"generated":{"line":1,"column":115}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":6,"column":15},"generated":{"line":1,"column":119}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"rng","original":{"line":6,"column":24},"generated":{"line":1,"column":128}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":8,"column":2},"generated":{"line":1,"column":132}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"getRandomValues","original":{"line":8,"column":7},"generated":{"line":1,"column":136}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"getRandomValues","original":{"line":10,"column":4},"generated":{"line":1,"column":141}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":10,"column":40},"generated":{"line":1,"column":143}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"crypto","original":{"line":10,"column":29},"generated":{"line":1,"column":163}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"crypto","original":{"line":10,"column":55},"generated":{"line":1,"column":171}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"getRandomValues","original":{"line":10,"column":62},"generated":{"line":1,"column":178}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"crypto","original":{"line":10,"column":81},"generated":{"line":1,"column":195}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"getRandomValues","original":{"line":10,"column":88},"generated":{"line":1,"column":202}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"bind","original":{"line":10,"column":104},"generated":{"line":1,"column":218}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"crypto","original":{"line":10,"column":109},"generated":{"line":1,"column":223}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":13,"column":6},"generated":{"line":1,"column":232}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":13,"column":12},"generated":{"line":1,"column":238}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"Error","original":{"line":13,"column":16},"generated":{"line":1,"column":242}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":13,"column":22},"generated":{"line":1,"column":248}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","original":{"line":17,"column":2},"generated":{"line":1,"column":356}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"getRandomValues","original":{"line":17,"column":9},"generated":{"line":1,"column":363}},{"source":"node_modules/uuid/dist/esm-browser/rng.js","name":"rnds8","original":{"line":17,"column":25},"generated":{"line":1,"column":365}}],"sources":{"node_modules/uuid/dist/esm-browser/rng.js":"// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}"},"lineCount":null}},"error":null,"hash":"66827dadfc4c0a152f473bc2e575d93b","cacheData":{"env":{}}}